def job_sequencing_with_deadlines(jobs):
    # Sort the jobs in decreasing order of their profits
    jobs.sort(key=lambda x: x[2], reverse=True)

    # Find the maximum deadline to allocate time slots
    max_deadline = max(jobs, key=lambda x: x[1])[1]

    # Initialize the time slot array with zeros
    time_slots = [0] * (max_deadline + 1)

    # Initialize the result arrays
    selected_jobs = []
    total_profit = 0

    # Assign time slots to jobs
    for job in jobs:
        for slot in range(job[1], 0, -1):
            if time_slots[slot] == 0:
                time_slots[slot] = 1
                selected_jobs.append(job[0])
                total_profit += job[2]
                break

    return selected_jobs, total_profit

# Test the job sequencing algorithm
jobs = [
    ('Job1', 2, 100),
    ('Job2', 1, 50),
    ('Job3', 2, 10),
    ('Job4', 1, 20),
    ('Job5', 3, 30)
]

selected_jobs, total_profit = job_sequencing_with_deadlines(jobs)

print("Selected Jobs:", selected_jobs)
print("Total Profit:", total_profit)

output -Selected Jobs: ['Job1', 'Job5', 'Job2']
Total Profit: 180
